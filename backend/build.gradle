buildscript {
    ext {
        springBootVersion = '2.7.9'
    }
    repositories {
        mavenLocal()
        maven {
            url "https://maven.aliyun.com/repository/public"
        }
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'war'

group 'com.myzuji'
version '1.0-SNAPSHOT'

repositories {
    mavenLocal()
    mavenCentral()
}

configurations {
    providedRuntime
}

dependencies {
    implementation project(':util')
    implementation("org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}")
    implementation("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
    implementation("org.springframework.boot:spring-boot-starter-websocket:${springBootVersion}")
    implementation("org.springframework.boot:spring-boot-starter-jdbc:${springBootVersion}")
    implementation("org.springframework.boot:spring-boot-starter-log4j2:${springBootVersion}")
    implementation("org.springframework.boot:spring-boot-starter-thymeleaf:${springBootVersion}")
    implementation("org.springframework.boot:spring-boot-starter-security:${springBootVersion}")
    implementation('com.alibaba:druid-spring-boot-starter:1.2.15')
    implementation('org.apache.commons:commons-lang3:3.7')
    implementation('com.google.guava:guava:27.0.1-jre')
    implementation('com.alibaba:fastjson:1.2.9')
    implementation('io.jsonwebtoken:jjwt:0.9.1')
    implementation('com.github.penggle:kaptcha:2.3.2')
    implementation group: 'org.apache.commons', name: 'commons-collections4', version: '4.3'
    implementation("com.mysql:mysql-connector-j:9.0.0")
    implementation("org.springframework.boot:spring-boot-devtools:${springBootVersion}")
    compileOnly 'org.projectlombok:lombok:1.18.20'
    providedRuntime("org.springframework.boot:spring-boot-starter-tomcat:${springBootVersion}")
    testImplementation("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")
}

configurations {
    all*.exclude module: 'spring-boot-starter-logging'
}
